{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Popup.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","src","alt","CardList","robots","map","robot","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","Popup","onClick","closePopup","App","onSearchChange","event","setState","searchfield","target","value","openPopup","popup","state","console","log","a","fetch","response","json","users","this","filteredRobots","filter","toLowerCase","includes","length","Fragment","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,kECQCQ,EAbF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACxB,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,gBACpD,gCACE,6BAAKL,IACL,4BAAIC,WCcGK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OAAS,oCAEDA,EAAOC,KAAI,SAACC,EAAOC,GACf,OAAO,cAAC,EAAD,CAAMR,GAAOO,EAAMP,GAC1BF,KAASS,EAAMT,KACfC,MAAUQ,EAAMR,OACRS,UCFTC,EAPG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,uBAAOC,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,EAC3DT,UAAU,mCCMCa,EATA,SAACC,GAEd,OACE,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAS,kBAAmBC,OAAS,SAAvE,SACGJ,EAAMK,YCQEC,G,MAXD,SAACN,GACb,OACE,qBAAKd,UAAU,cAAf,SACE,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,eAAeqB,QAASP,EAAMQ,WAA7C,qBC4GSC,G,wDAzGf,aAAe,IAAD,8BACV,gBAUJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAZhC,EA8BdC,UAAY,WACR,EAAKJ,SAAS,CAAEK,OAAO,KA/Bb,EAkCdT,WAAa,WACT,EAAKI,SAAS,CAAEK,OAAO,KAjCvB,EAAKC,MAAQ,CACT5B,OAAQ,GACRuB,YAAa,GACbI,OAAO,GAGXE,QAAQC,IAAI,gBARF,E,4FAed,iCAAAC,EAAA,6DAEIF,QAAQC,IAAI,eAFhB,SAIUE,MAAM,8CACP9C,MAAK,SAAA+C,GACF,OAAOA,EAASC,UAEnBhD,MAAK,SAAAiD,GACF,EAAKb,SAAS,CAAEtB,OAAQmC,OATpC,OAYIN,QAAQC,IAAI,wBAZhB,2C,0EAwBA,WACI,MAAgCM,KAAKR,MAA7B5B,EAAR,EAAQA,OAAQuB,EAAhB,EAAgBA,YAChBM,QAAQC,IAAI,iBACZ,IAAMO,EAAiBrC,EAAOsC,QAAO,SAACpC,GAClC,OAAOA,EAAMT,KAAK8C,cAAcC,SAASjB,EAAYgB,kBAGzD,OAAQF,EAAeI,OAGjB,eACE,IAAMC,SADR,eAEMN,KAAKR,MAAMD,MAAQ,cAAE,EAAF,CAAQT,WAAekB,KAAKlB,aAC1C,GAHX,IAGe,sBACLtB,UAAY,KADP,UAGT,4CAHS,IAIY,wBACdqB,QAAYmB,KAAKV,UADH,0BAJZ,IAKmD,cAC5D,EAD4D,CAClDrB,aAAiB+B,KAAKhB,iBANvB,IAON,eACH,EADG,WAEH,cACA,EADA,CACSpB,OAAWqC,IAHjB,OAPM,OAHf,OAFF,sD,GAjDMM,cCyBlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAE,EAAF,MAEFC,SAASC,eAAe,SAM1BjE,M","file":"static/js/main.872767f9.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({name,email,id}) => {\n  return(\n    <div className=' tc bg-light-green dib br3 pa3 grow ma2 shadow-2'>\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"robotsImage\"/>\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({ robots }) => {\n    return ( <\n        div > {\n            robots.map((robot, i) => {\n                return <Card id = { robot.id }\n                name = { robot.name }\n                email = { robot.email }\n                key = { i }\n                />\n            })\n        }\n\n        <\n        /div>\n    )\n}\n\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n  return(\n    <input type=\"search\" placeholder=\"Search robots\" onChange={searchChange} \n    className=\"pa3 ba b-green bg-light-blue \"/>  \n    )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  \n  return (\n    <div style={{overflowY: 'scroll', border : '3px solid black', height : '500px'}}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Scroll;","import React from 'react';\nimport './popup.css';\n\nconst Popup = (props) => {\n  return(\n    <div className=\"popup--back\">\n      <div className=\"popup--content\">\n          <div className=\"popup--close\" onClick={props.closePopup}>x</div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default Popup;\n","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from '../components/Scroll';\nimport Popup from '../components/Popup';\nimport \"./App.css\";\n\n\nclass App extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchfield: '',\n            popup: false\n        }\n\n        console.log(\"Constructor!\")\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value });\n    }\n\n    async componentDidMount() {\n\n        console.log(\"Inside will\");\n\n        await fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => {\n                return response.json()\n            })\n            .then(users => {\n                this.setState({ robots: users });\n            })\n\n        console.log(\"After setting state!\");\n    }\n\n    openPopup = () => {\n        this.setState({ popup: true });\n    }\n\n    closePopup = () => {\n        this.setState({ popup: false });\n    }\n\n\n    render() {\n        const { robots, searchfield } = this.state;\n        console.log(\"Render runned\");\n        const filteredRobots = robots.filter((robot) => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n\n        return !filteredRobots.length ?\n            <\n            h1 > Loading....... < /h1>  :\n            ( <\n                React.Fragment > {\n                    this.state.popup ? < Popup closePopup = { this.closePopup }\n                    /> : \"\"} <\n                    div className = \"tc\" >\n\n                    <\n                    h1 > Robofans < /h1> <\n                    button onClick = { this.openPopup } > Open Popup < /button> <\n                    SearchBox searchChange = { this.onSearchChange }\n                    /> <\n                    Scroll >\n                    <\n                    CardList robots = { filteredRobots }\n                    /> < /\n                    Scroll > <\n                    /div> < /\n                    React.Fragment >\n                )\n            }\n    }\n\n    // class App extends Component{\n    //   constructor(){\n    //     super();\n    //     this.state = {\n    //       name:\"Tirth\"\n    //     }\n    //     console.log(\"Inside Constructor!\");\n    //   }\n\n    //   componentWillMount(){\n    //     console.log(\"Inside component will mount!\");\n    //     setTimeout(() => {\n    //       await this.setState({name : \"Arafat will\"});\n    //       console.log(\"Inside setTimeout\");\n    //     },3000)\n    //     console.log(\"I WILL 2\");\n    //   }\n\n    //   componentDidMount(){\n    //     console.log(\"Inside component did mount!\");\n    //     setTimeout(() => {\n    //       this.setState({name : \"Rekha did\"});\n    //     },1000)\n    //   }\n\n    //   render(){\n    //     console.log(\"Inside Render!\");\n    //     return (\n    //       <h1>Hello world this is {this.state.name}</h1>\n    //     )\n    //   }\n    // }\n\n\n    export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport tachyons from 'tachyons';\nimport App from './containers/App';\n\n// const Layout = (props) => {\n\n//   console.log(props.children);\n//   return (\n//     <div>\n//       <header>My Header</header>\n//       <main>{props.children[0]}</main>\n//       <h1>I am a third child!</h1>\n      \n//     </div>\n//   )\n// }\n\n// const App = () => {\n//   return(\n//     <div>\n//       <Layout> \n//         <h1>I am First Child</h1>\n//         <h1>I am Second Child</h1>\n//       </Layout>\n//     </div>\n    \n//   )\n// }\n\n\nReactDOM.render(\n  <React.StrictMode>\n    < App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}